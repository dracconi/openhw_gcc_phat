// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module findmax_findmax_Pipeline_VITIS_LOOP_15_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty,
        in_data_re_1,
        in_data_re_2,
        current_index_load,
        findmax_stream_stream_axis_0_max_value_2_i,
        findmax_stream_stream_axis_0_max_value_2_o,
        findmax_stream_stream_axis_0_max_value_2_o_ap_vld,
        findmax_stream_stream_axis_0_max_value_1_i,
        findmax_stream_stream_axis_0_max_value_1_o,
        findmax_stream_stream_axis_0_max_value_1_o_ap_vld,
        findmax_stream_stream_axis_0_max_value_i,
        findmax_stream_stream_axis_0_max_value_o,
        findmax_stream_stream_axis_0_max_value_o_ap_vld,
        findmax_stream_stream_axis_0_out_data_0,
        findmax_stream_stream_axis_0_out_data_0_ap_vld,
        findmax_stream_stream_axis_0_out_data_1,
        findmax_stream_stream_axis_0_out_data_1_ap_vld,
        findmax_stream_stream_axis_0_out_data_2,
        findmax_stream_stream_axis_0_out_data_2_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] empty;
input  [15:0] in_data_re_1;
input  [15:0] in_data_re_2;
input  [15:0] current_index_load;
input  [15:0] findmax_stream_stream_axis_0_max_value_2_i;
output  [15:0] findmax_stream_stream_axis_0_max_value_2_o;
output   findmax_stream_stream_axis_0_max_value_2_o_ap_vld;
input  [15:0] findmax_stream_stream_axis_0_max_value_1_i;
output  [15:0] findmax_stream_stream_axis_0_max_value_1_o;
output   findmax_stream_stream_axis_0_max_value_1_o_ap_vld;
input  [15:0] findmax_stream_stream_axis_0_max_value_i;
output  [15:0] findmax_stream_stream_axis_0_max_value_o;
output   findmax_stream_stream_axis_0_max_value_o_ap_vld;
output  [15:0] findmax_stream_stream_axis_0_out_data_0;
output   findmax_stream_stream_axis_0_out_data_0_ap_vld;
output  [15:0] findmax_stream_stream_axis_0_out_data_1;
output   findmax_stream_stream_axis_0_out_data_1_ap_vld;
output  [15:0] findmax_stream_stream_axis_0_out_data_2;
output   findmax_stream_stream_axis_0_out_data_2_ap_vld;

reg ap_idle;
reg[15:0] findmax_stream_stream_axis_0_max_value_2_o;
reg findmax_stream_stream_axis_0_max_value_2_o_ap_vld;
reg[15:0] findmax_stream_stream_axis_0_max_value_1_o;
reg findmax_stream_stream_axis_0_max_value_1_o_ap_vld;
reg[15:0] findmax_stream_stream_axis_0_max_value_o;
reg findmax_stream_stream_axis_0_max_value_o_ap_vld;
reg findmax_stream_stream_axis_0_out_data_0_ap_vld;
reg findmax_stream_stream_axis_0_out_data_1_ap_vld;
reg findmax_stream_stream_axis_0_out_data_2_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln15_fu_88_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [15:0] tmp_6_fu_132_p9;
wire   [0:0] icmp_ln16_fu_152_p2;
wire   [1:0] i_2_load_fu_85_p1;
reg   [1:0] i_fu_52;
wire   [1:0] add_ln15_fu_94_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_i_2;
wire   [15:0] tmp_5_fu_112_p7;
wire   [15:0] tmp_6_fu_132_p7;
wire   [15:0] tmp_5_fu_112_p9;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [1:0] tmp_5_fu_112_p1;
wire   [1:0] tmp_5_fu_112_p3;
wire  signed [1:0] tmp_5_fu_112_p5;
wire   [1:0] tmp_6_fu_132_p1;
wire   [1:0] tmp_6_fu_132_p3;
wire  signed [1:0] tmp_6_fu_132_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 i_fu_52 = 2'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) findmax_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U1(
    .din0(findmax_stream_stream_axis_0_max_value_2_i),
    .din1(findmax_stream_stream_axis_0_max_value_1_i),
    .din2(findmax_stream_stream_axis_0_max_value_i),
    .def(tmp_5_fu_112_p7),
    .sel(ap_sig_allocacmp_i_2),
    .dout(tmp_5_fu_112_p9)
);

(* dissolve_hierarchy = "yes" *) findmax_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U2(
    .din0(empty),
    .din1(in_data_re_1),
    .din2(in_data_re_2),
    .def(tmp_6_fu_132_p7),
    .sel(ap_sig_allocacmp_i_2),
    .dout(tmp_6_fu_132_p9)
);

findmax_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln15_fu_88_p2 == 1'd0)) begin
            i_fu_52 <= add_ln15_fu_94_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_52 <= 2'd0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln15_fu_88_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_2 = 2'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_52;
    end
end

always @ (*) begin
    if (((i_2_load_fu_85_p1 == 2'd1) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_max_value_1_o = tmp_6_fu_132_p9;
    end else begin
        findmax_stream_stream_axis_0_max_value_1_o = findmax_stream_stream_axis_0_max_value_1_i;
    end
end

always @ (*) begin
    if (((i_2_load_fu_85_p1 == 2'd1) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_max_value_1_o_ap_vld = 1'b1;
    end else begin
        findmax_stream_stream_axis_0_max_value_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((i_2_load_fu_85_p1 == 2'd0) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_max_value_2_o = tmp_6_fu_132_p9;
    end else begin
        findmax_stream_stream_axis_0_max_value_2_o = findmax_stream_stream_axis_0_max_value_2_i;
    end
end

always @ (*) begin
    if (((i_2_load_fu_85_p1 == 2'd0) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_max_value_2_o_ap_vld = 1'b1;
    end else begin
        findmax_stream_stream_axis_0_max_value_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_2_load_fu_85_p1 == 2'd1) & ~(i_2_load_fu_85_p1 == 2'd0) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_max_value_o = tmp_6_fu_132_p9;
    end else begin
        findmax_stream_stream_axis_0_max_value_o = findmax_stream_stream_axis_0_max_value_i;
    end
end

always @ (*) begin
    if ((~(i_2_load_fu_85_p1 == 2'd1) & ~(i_2_load_fu_85_p1 == 2'd0) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_max_value_o_ap_vld = 1'b1;
    end else begin
        findmax_stream_stream_axis_0_max_value_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((i_2_load_fu_85_p1 == 2'd0) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_out_data_0_ap_vld = 1'b1;
    end else begin
        findmax_stream_stream_axis_0_out_data_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((i_2_load_fu_85_p1 == 2'd1) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_out_data_1_ap_vld = 1'b1;
    end else begin
        findmax_stream_stream_axis_0_out_data_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_2_load_fu_85_p1 == 2'd1) & ~(i_2_load_fu_85_p1 == 2'd0) & (icmp_ln16_fu_152_p2 == 1'd1) & (icmp_ln15_fu_88_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        findmax_stream_stream_axis_0_out_data_2_ap_vld = 1'b1;
    end else begin
        findmax_stream_stream_axis_0_out_data_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_fu_94_p2 = (ap_sig_allocacmp_i_2 + 2'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign findmax_stream_stream_axis_0_out_data_0 = current_index_load;

assign findmax_stream_stream_axis_0_out_data_1 = current_index_load;

assign findmax_stream_stream_axis_0_out_data_2 = current_index_load;

assign i_2_load_fu_85_p1 = ap_sig_allocacmp_i_2;

assign icmp_ln15_fu_88_p2 = ((ap_sig_allocacmp_i_2 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_152_p2 = (($signed(tmp_5_fu_112_p9) < $signed(tmp_6_fu_132_p9)) ? 1'b1 : 1'b0);

assign tmp_5_fu_112_p7 = 'bx;

assign tmp_6_fu_132_p7 = 'bx;

endmodule //findmax_findmax_Pipeline_VITIS_LOOP_15_1
