-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crosscorr_run is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    stream_out_TVALID : OUT STD_LOGIC;
    stream_out_TREADY : IN STD_LOGIC;
    stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of crosscorr_run is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal stream_in_TDATA_blk_n : STD_LOGIC;
    signal stream_out_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal in_last_reg_419 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln13_fu_294_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln13_reg_424 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln13_2_reg_429 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln13_5_reg_434 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln13_6_reg_439 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln13_7_reg_444 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln13_8_reg_449 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_re_addr_1_reg_464 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out_data_im_addr_1_reg_469 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_data_re_addr_2_reg_474 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_data_im_addr_2_reg_479 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp2_re_1_fu_388_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp2_re_1_reg_484 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp2_im_1_fu_396_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp2_im_1_reg_489 : STD_LOGIC_VECTOR (24 downto 0);
    signal out_data_re_load_reg_494 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal out_data_im_load_reg_499 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_data_re_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_data_re_ce0 : STD_LOGIC;
    signal in_data_re_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_data_im_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_data_im_ce0 : STD_LOGIC;
    signal in_data_im_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_re_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_data_re_ce0 : STD_LOGIC;
    signal out_data_re_we0 : STD_LOGIC;
    signal out_data_re_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_re_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_re_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_im_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_data_im_ce0 : STD_LOGIC;
    signal out_data_im_we0 : STD_LOGIC;
    signal out_data_im_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_im_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_im_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_idle : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_ready : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_ce0 : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_we0 : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_ce0 : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_we0 : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_ce0 : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_ce0 : STD_LOGIC;
    signal grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal out_data_re_we0_out : STD_LOGIC;
    signal out_data_im_we0_out : STD_LOGIC;
    signal in_data_re_we1_local : STD_LOGIC;
    signal in_data_re_d1_local : STD_LOGIC_VECTOR (15 downto 0);
    signal in_data_re_ce1_local : STD_LOGIC;
    signal in_data_re_address1_local : STD_LOGIC_VECTOR (1 downto 0);
    signal in_data_re_we0_local : STD_LOGIC;
    signal in_data_re_d0_local : STD_LOGIC_VECTOR (15 downto 0);
    signal in_data_re_ce0_local : STD_LOGIC;
    signal in_data_re_address0_local : STD_LOGIC_VECTOR (1 downto 0);
    signal in_data_im_we1_local : STD_LOGIC;
    signal in_data_im_d1_local : STD_LOGIC_VECTOR (15 downto 0);
    signal in_data_im_ce1_local : STD_LOGIC;
    signal in_data_im_address1_local : STD_LOGIC_VECTOR (1 downto 0);
    signal in_data_im_we0_local : STD_LOGIC;
    signal in_data_im_d0_local : STD_LOGIC_VECTOR (15 downto 0);
    signal in_data_im_ce0_local : STD_LOGIC;
    signal in_data_im_address0_local : STD_LOGIC_VECTOR (1 downto 0);
    signal out_data_re_we0_local : STD_LOGIC;
    signal out_data_re_ce0_local : STD_LOGIC;
    signal out_data_re_address0_local : STD_LOGIC_VECTOR (1 downto 0);
    signal out_data_re_we1_local : STD_LOGIC;
    signal out_data_re_ce1_local : STD_LOGIC;
    signal out_data_re_address1_local : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal out_data_im_we0_local : STD_LOGIC;
    signal out_data_im_ce0_local : STD_LOGIC;
    signal out_data_im_address0_local : STD_LOGIC_VECTOR (1 downto 0);
    signal out_data_im_we1_local : STD_LOGIC;
    signal out_data_im_ce1_local : STD_LOGIC;
    signal out_data_im_address1_local : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_stream_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state8 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal regslice_both_stream_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal stream_in_TVALID_int_regslice : STD_LOGIC;
    signal stream_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_V_last_V_U_ack_in : STD_LOGIC;
    signal stream_out_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal stream_out_TVALID_int_regslice : STD_LOGIC;
    signal stream_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component crosscorr_run_Pipeline_VITIS_LOOP_19_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_data_re_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        out_data_re_ce0 : OUT STD_LOGIC;
        out_data_re_we0 : OUT STD_LOGIC;
        out_data_re_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_data_im_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        out_data_im_ce0 : OUT STD_LOGIC;
        out_data_im_we0 : OUT STD_LOGIC;
        out_data_im_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        in_data_re_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        in_data_re_ce0 : OUT STD_LOGIC;
        in_data_re_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_data_im_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        in_data_im_ce0 : OUT STD_LOGIC;
        in_data_im_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        tmp2_re_1_cast : IN STD_LOGIC_VECTOR (24 downto 0);
        sext_ln19 : IN STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component crosscorr_run_in_data_re_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component crosscorr_run_out_data_re_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component crosscorr_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    in_data_re_U : component crosscorr_run_in_data_re_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => in_data_re_address0,
        ce0 => in_data_re_ce0,
        we0 => in_data_re_we0_local,
        d0 => in_data_re_d0_local,
        q0 => in_data_re_q0,
        address1 => in_data_re_address1_local,
        ce1 => in_data_re_ce1_local,
        we1 => in_data_re_we1_local,
        d1 => in_data_re_d1_local);

    in_data_im_U : component crosscorr_run_in_data_re_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => in_data_im_address0,
        ce0 => in_data_im_ce0,
        we0 => in_data_im_we0_local,
        d0 => in_data_im_d0_local,
        q0 => in_data_im_q0,
        address1 => in_data_im_address1_local,
        ce1 => in_data_im_ce1_local,
        we1 => in_data_im_we1_local,
        d1 => in_data_im_d1_local);

    out_data_re_U : component crosscorr_run_out_data_re_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_data_re_address0,
        ce0 => out_data_re_ce0,
        we0 => out_data_re_we0,
        d0 => out_data_re_d0,
        q0 => out_data_re_q0,
        address1 => out_data_re_address1_local,
        ce1 => out_data_re_ce1_local,
        we1 => out_data_re_we1_local,
        d1 => ap_const_lv16_0,
        q1 => out_data_re_q1);

    out_data_im_U : component crosscorr_run_out_data_re_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_data_im_address0,
        ce0 => out_data_im_ce0,
        we0 => out_data_im_we0,
        d0 => out_data_im_d0,
        q0 => out_data_im_q0,
        address1 => out_data_im_address1_local,
        ce1 => out_data_im_ce1_local,
        we1 => out_data_im_we1_local,
        d1 => ap_const_lv16_0,
        q1 => out_data_im_q1);

    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276 : component crosscorr_run_Pipeline_VITIS_LOOP_19_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start,
        ap_done => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done,
        ap_idle => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_idle,
        ap_ready => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_ready,
        out_data_re_address0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_address0,
        out_data_re_ce0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_ce0,
        out_data_re_we0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_we0,
        out_data_re_d0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_d0,
        out_data_im_address0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_address0,
        out_data_im_ce0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_ce0,
        out_data_im_we0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_we0,
        out_data_im_d0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_d0,
        in_data_re_address0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_address0,
        in_data_re_ce0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_ce0,
        in_data_re_q0 => in_data_re_q0,
        in_data_im_address0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_address0,
        in_data_im_ce0 => grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_ce0,
        in_data_im_q0 => in_data_im_q0,
        tmp2_re_1_cast => tmp2_re_1_reg_484,
        sext_ln19 => tmp2_im_1_reg_489);

    regslice_both_stream_in_V_data_V_U : component crosscorr_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => stream_in_TDATA,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_data_V_U_ack_in,
        data_out => stream_in_TDATA_int_regslice,
        vld_out => stream_in_TVALID_int_regslice,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_data_V_U_apdone_blk);

    regslice_both_stream_in_V_last_V_U : component crosscorr_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => stream_in_TLAST,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_last_V_U_ack_in,
        data_out => stream_in_TLAST_int_regslice,
        vld_out => regslice_both_stream_in_V_last_V_U_vld_out,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_last_V_U_apdone_blk);

    regslice_both_stream_out_V_data_V_U : component crosscorr_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => stream_out_TDATA_int_regslice,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => stream_out_TREADY_int_regslice,
        data_out => stream_out_TDATA,
        vld_out => regslice_both_stream_out_V_data_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_data_V_U_apdone_blk);

    regslice_both_stream_out_V_last_V_U : component crosscorr_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_last_reg_419,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_V_last_V_U_ack_in_dummy,
        data_out => stream_out_TLAST,
        vld_out => regslice_both_stream_out_V_last_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state8) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_ready = ap_const_logic_1)) then 
                    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                in_last_reg_419 <= stream_in_TLAST_int_regslice;
                trunc_ln13_2_reg_429 <= stream_in_TDATA_int_regslice(31 downto 16);
                trunc_ln13_5_reg_434 <= stream_in_TDATA_int_regslice(79 downto 64);
                trunc_ln13_6_reg_439 <= stream_in_TDATA_int_regslice(95 downto 80);
                trunc_ln13_7_reg_444 <= stream_in_TDATA_int_regslice(111 downto 96);
                trunc_ln13_8_reg_449 <= stream_in_TDATA_int_regslice(127 downto 112);
                trunc_ln13_reg_424 <= trunc_ln13_fu_294_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                out_data_im_load_reg_499 <= out_data_im_q1;
                out_data_re_load_reg_494 <= out_data_re_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    tmp2_im_1_reg_489(24 downto 9) <= tmp2_im_1_fu_396_p3(24 downto 9);
                    tmp2_re_1_reg_484(24 downto 9) <= tmp2_re_1_fu_388_p3(24 downto 9);
            end if;
        end if;
    end process;
    tmp2_re_1_reg_484(8 downto 0) <= "000000000";
    tmp2_im_1_reg_489(8 downto 0) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state1, grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done, ap_CS_fsm_state4, ap_block_state8, stream_out_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((stream_out_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done)
    begin
        if ((grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(stream_out_TREADY_int_regslice)
    begin
        if ((stream_out_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8)
    begin
        if ((ap_const_boolean_1 = ap_block_state8)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, stream_in_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((stream_in_TVALID_int_regslice = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(regslice_both_stream_out_V_data_V_U_apdone_blk, stream_out_TREADY_int_regslice)
    begin
                ap_block_state8 <= ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_stream_out_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8, ap_block_state8)
    begin
        if (((ap_const_boolean_0 = ap_block_state8) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8, ap_block_state8)
    begin
        if (((ap_const_boolean_0 = ap_block_state8) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg;

    in_data_im_address0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_address0, ap_CS_fsm_state4, in_data_im_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_data_im_address0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_address0;
        else 
            in_data_im_address0 <= in_data_im_address0_local;
        end if; 
    end process;


    in_data_im_address0_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_data_im_address0_local <= ap_const_lv64_3(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            in_data_im_address0_local <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            in_data_im_address0_local <= "XX";
        end if; 
    end process;


    in_data_im_address1_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_data_im_address1_local <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            in_data_im_address1_local <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            in_data_im_address1_local <= "XX";
        end if; 
    end process;


    in_data_im_ce0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_ce0, ap_CS_fsm_state4, in_data_im_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_data_im_ce0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_ce0;
        else 
            in_data_im_ce0 <= in_data_im_ce0_local;
        end if; 
    end process;


    in_data_im_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_data_im_ce0_local <= ap_const_logic_1;
        else 
            in_data_im_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    in_data_im_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_data_im_ce1_local <= ap_const_logic_1;
        else 
            in_data_im_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    in_data_im_d0_local_assign_proc : process(ap_CS_fsm_state1, trunc_ln13_8_reg_449, ap_CS_fsm_state2, stream_in_TDATA_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_data_im_d0_local <= trunc_ln13_8_reg_449;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            in_data_im_d0_local <= stream_in_TDATA_int_regslice(63 downto 48);
        else 
            in_data_im_d0_local <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    in_data_im_d1_local_assign_proc : process(ap_CS_fsm_state1, trunc_ln13_6_reg_439, ap_CS_fsm_state2, stream_in_TDATA_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_data_im_d1_local <= trunc_ln13_6_reg_439;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            in_data_im_d1_local <= stream_in_TDATA_int_regslice(31 downto 16);
        else 
            in_data_im_d1_local <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    in_data_im_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_data_im_we0_local <= ap_const_logic_1;
        else 
            in_data_im_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    in_data_im_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_data_im_we1_local <= ap_const_logic_1;
        else 
            in_data_im_we1_local <= ap_const_logic_0;
        end if; 
    end process;


    in_data_re_address0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_address0, ap_CS_fsm_state4, in_data_re_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_data_re_address0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_address0;
        else 
            in_data_re_address0 <= in_data_re_address0_local;
        end if; 
    end process;


    in_data_re_address0_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_data_re_address0_local <= ap_const_lv64_3(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            in_data_re_address0_local <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            in_data_re_address0_local <= "XX";
        end if; 
    end process;


    in_data_re_address1_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_data_re_address1_local <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            in_data_re_address1_local <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            in_data_re_address1_local <= "XX";
        end if; 
    end process;


    in_data_re_ce0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_ce0, ap_CS_fsm_state4, in_data_re_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_data_re_ce0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_ce0;
        else 
            in_data_re_ce0 <= in_data_re_ce0_local;
        end if; 
    end process;


    in_data_re_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_data_re_ce0_local <= ap_const_logic_1;
        else 
            in_data_re_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    in_data_re_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_data_re_ce1_local <= ap_const_logic_1;
        else 
            in_data_re_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    in_data_re_d0_local_assign_proc : process(ap_CS_fsm_state1, trunc_ln13_7_reg_444, ap_CS_fsm_state2, stream_in_TDATA_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_data_re_d0_local <= trunc_ln13_7_reg_444;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            in_data_re_d0_local <= stream_in_TDATA_int_regslice(47 downto 32);
        else 
            in_data_re_d0_local <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    in_data_re_d1_local_assign_proc : process(ap_CS_fsm_state1, trunc_ln13_fu_294_p1, trunc_ln13_5_reg_434, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_data_re_d1_local <= trunc_ln13_5_reg_434;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            in_data_re_d1_local <= trunc_ln13_fu_294_p1;
        else 
            in_data_re_d1_local <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    in_data_re_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_data_re_we0_local <= ap_const_logic_1;
        else 
            in_data_re_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    in_data_re_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_data_re_we1_local <= ap_const_logic_1;
        else 
            in_data_re_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    out_data_im_addr_1_reg_469 <= ap_const_lv64_1(2 - 1 downto 0);
    out_data_im_addr_2_reg_479 <= ap_const_lv64_2(2 - 1 downto 0);

    out_data_im_address0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_address0, ap_CS_fsm_state4, out_data_im_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_im_address0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_address0;
        else 
            out_data_im_address0 <= out_data_im_address0_local;
        end if; 
    end process;


    out_data_im_address0_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, out_data_im_addr_2_reg_479, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_data_im_address0_local <= out_data_im_addr_2_reg_479;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_data_im_address0_local <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            out_data_im_address0_local <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            out_data_im_address0_local <= "XX";
        end if; 
    end process;


    out_data_im_address1_local_assign_proc : process(ap_CS_fsm_state2, out_data_im_addr_1_reg_469, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_data_im_address1_local <= out_data_im_addr_1_reg_469;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            out_data_im_address1_local <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_data_im_address1_local <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            out_data_im_address1_local <= "XX";
        end if; 
    end process;


    out_data_im_ce0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_ce0, ap_CS_fsm_state4, out_data_im_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_im_ce0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_ce0;
        else 
            out_data_im_ce0 <= out_data_im_ce0_local;
        end if; 
    end process;


    out_data_im_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_data_im_ce0_local <= ap_const_logic_1;
        else 
            out_data_im_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    out_data_im_ce1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            out_data_im_ce1_local <= ap_const_logic_1;
        else 
            out_data_im_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    out_data_im_d0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_d0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_im_d0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_d0;
        else 
            out_data_im_d0 <= ap_const_lv16_0;
        end if; 
    end process;


    out_data_im_we0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_we0, ap_CS_fsm_state4, out_data_im_we0_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_im_we0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_we0;
        else 
            out_data_im_we0 <= (out_data_im_we0_out or ap_const_logic_0);
        end if; 
    end process;


    out_data_im_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_data_im_we0_local <= ap_const_logic_1;
        else 
            out_data_im_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_data_im_we0_out <= out_data_im_we0_local;

    out_data_im_we1_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_data_im_we1_local <= ap_const_logic_1;
        else 
            out_data_im_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    out_data_re_addr_1_reg_464 <= ap_const_lv64_1(2 - 1 downto 0);
    out_data_re_addr_2_reg_474 <= ap_const_lv64_2(2 - 1 downto 0);

    out_data_re_address0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_address0, ap_CS_fsm_state4, out_data_re_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_re_address0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_address0;
        else 
            out_data_re_address0 <= out_data_re_address0_local;
        end if; 
    end process;


    out_data_re_address0_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, out_data_re_addr_2_reg_474, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_data_re_address0_local <= out_data_re_addr_2_reg_474;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_data_re_address0_local <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            out_data_re_address0_local <= ap_const_lv64_0(2 - 1 downto 0);
        else 
            out_data_re_address0_local <= "XX";
        end if; 
    end process;


    out_data_re_address1_local_assign_proc : process(out_data_re_addr_1_reg_464, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_data_re_address1_local <= out_data_re_addr_1_reg_464;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            out_data_re_address1_local <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_data_re_address1_local <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            out_data_re_address1_local <= "XX";
        end if; 
    end process;


    out_data_re_ce0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_ce0, ap_CS_fsm_state4, out_data_re_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_re_ce0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_ce0;
        else 
            out_data_re_ce0 <= out_data_re_ce0_local;
        end if; 
    end process;


    out_data_re_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_data_re_ce0_local <= ap_const_logic_1;
        else 
            out_data_re_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    out_data_re_ce1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            out_data_re_ce1_local <= ap_const_logic_1;
        else 
            out_data_re_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    out_data_re_d0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_d0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_re_d0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_d0;
        else 
            out_data_re_d0 <= ap_const_lv16_0;
        end if; 
    end process;


    out_data_re_we0_assign_proc : process(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_we0, ap_CS_fsm_state4, out_data_re_we0_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_re_we0 <= grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_we0;
        else 
            out_data_re_we0 <= (out_data_re_we0_out or ap_const_logic_0);
        end if; 
    end process;


    out_data_re_we0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_data_re_we0_local <= ap_const_logic_1;
        else 
            out_data_re_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_data_re_we0_out <= out_data_re_we0_local;

    out_data_re_we1_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_data_re_we1_local <= ap_const_logic_1;
        else 
            out_data_re_we1_local <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_in_TVALID_int_regslice)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_in_TDATA_blk_n <= stream_in_TVALID_int_regslice;
        else 
            stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_TREADY <= regslice_both_stream_in_V_data_V_U_ack_in;

    stream_in_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_in_TREADY_int_regslice <= ap_const_logic_1;
        else 
            stream_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, stream_out_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_TDATA_blk_n <= stream_out_TREADY_int_regslice;
        else 
            stream_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_TDATA_int_regslice <= (((((out_data_im_q0 & out_data_re_q0) & out_data_im_q1) & out_data_re_q1) & out_data_im_load_reg_499) & out_data_re_load_reg_494);
    stream_out_TVALID <= regslice_both_stream_out_V_data_V_U_vld_out;

    stream_out_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state7, stream_out_TREADY_int_regslice)
    begin
        if (((stream_out_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            stream_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            stream_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp2_im_1_fu_396_p3 <= (trunc_ln13_2_reg_429 & ap_const_lv9_0);
    tmp2_re_1_fu_388_p3 <= (trunc_ln13_reg_424 & ap_const_lv9_0);
    trunc_ln13_fu_294_p1 <= stream_in_TDATA_int_regslice(16 - 1 downto 0);
end behav;
