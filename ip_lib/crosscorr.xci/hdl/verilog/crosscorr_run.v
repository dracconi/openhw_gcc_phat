// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module crosscorr_run (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_in_TDATA,
        stream_in_TVALID,
        stream_in_TREADY,
        stream_in_TLAST,
        stream_out_TDATA,
        stream_out_TVALID,
        stream_out_TREADY,
        stream_out_TLAST
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] stream_in_TDATA;
input   stream_in_TVALID;
output   stream_in_TREADY;
input  [0:0] stream_in_TLAST;
output  [95:0] stream_out_TDATA;
output   stream_out_TVALID;
input   stream_out_TREADY;
output  [0:0] stream_out_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_in_TDATA_blk_n;
reg    stream_out_TDATA_blk_n;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg   [0:0] in_last_reg_419;
reg    ap_block_state1;
wire   [15:0] trunc_ln13_fu_294_p1;
reg   [15:0] trunc_ln13_reg_424;
reg   [15:0] trunc_ln13_2_reg_429;
reg   [15:0] trunc_ln13_5_reg_434;
reg   [15:0] trunc_ln13_6_reg_439;
reg   [15:0] trunc_ln13_7_reg_444;
reg   [15:0] trunc_ln13_8_reg_449;
wire   [1:0] out_data_re_addr_1_reg_464;
wire    ap_CS_fsm_state2;
wire   [1:0] out_data_im_addr_1_reg_469;
wire   [1:0] out_data_re_addr_2_reg_474;
wire   [1:0] out_data_im_addr_2_reg_479;
wire   [24:0] tmp2_re_1_fu_388_p3;
reg   [24:0] tmp2_re_1_reg_484;
wire    ap_CS_fsm_state3;
wire   [24:0] tmp2_im_1_fu_396_p3;
reg   [24:0] tmp2_im_1_reg_489;
reg   [15:0] out_data_re_load_reg_494;
wire    ap_CS_fsm_state6;
reg   [15:0] out_data_im_load_reg_499;
reg   [1:0] in_data_re_address0;
reg    in_data_re_ce0;
wire   [15:0] in_data_re_q0;
reg   [1:0] in_data_im_address0;
reg    in_data_im_ce0;
wire   [15:0] in_data_im_q0;
reg   [1:0] out_data_re_address0;
reg    out_data_re_ce0;
reg    out_data_re_we0;
reg   [15:0] out_data_re_d0;
wire   [15:0] out_data_re_q0;
wire   [15:0] out_data_re_q1;
reg   [1:0] out_data_im_address0;
reg    out_data_im_ce0;
reg    out_data_im_we0;
reg   [15:0] out_data_im_d0;
wire   [15:0] out_data_im_q0;
wire   [15:0] out_data_im_q1;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_idle;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_ready;
wire   [1:0] grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_address0;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_ce0;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_we0;
wire   [15:0] grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_d0;
wire   [1:0] grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_address0;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_ce0;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_we0;
wire   [15:0] grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_d0;
wire   [1:0] grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_address0;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_ce0;
wire   [1:0] grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_address0;
wire    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_ce0;
reg    grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    out_data_re_we0_out;
wire    out_data_im_we0_out;
reg    in_data_re_we1_local;
reg   [15:0] in_data_re_d1_local;
reg    in_data_re_ce1_local;
reg   [1:0] in_data_re_address1_local;
reg    in_data_re_we0_local;
reg   [15:0] in_data_re_d0_local;
reg    in_data_re_ce0_local;
reg   [1:0] in_data_re_address0_local;
reg    in_data_im_we1_local;
reg   [15:0] in_data_im_d1_local;
reg    in_data_im_ce1_local;
reg   [1:0] in_data_im_address1_local;
reg    in_data_im_we0_local;
reg   [15:0] in_data_im_d0_local;
reg    in_data_im_ce0_local;
reg   [1:0] in_data_im_address0_local;
reg    out_data_re_we0_local;
reg    out_data_re_ce0_local;
reg   [1:0] out_data_re_address0_local;
reg    out_data_re_we1_local;
reg    out_data_re_ce1_local;
reg   [1:0] out_data_re_address1_local;
wire    ap_CS_fsm_state5;
reg    out_data_im_we0_local;
reg    out_data_im_ce0_local;
reg   [1:0] out_data_im_address0_local;
reg    out_data_im_we1_local;
reg    out_data_im_ce1_local;
reg   [1:0] out_data_im_address1_local;
wire    regslice_both_stream_out_V_data_V_U_apdone_blk;
reg    ap_block_state8;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    regslice_both_stream_in_V_data_V_U_apdone_blk;
wire   [127:0] stream_in_TDATA_int_regslice;
wire    stream_in_TVALID_int_regslice;
reg    stream_in_TREADY_int_regslice;
wire    regslice_both_stream_in_V_data_V_U_ack_in;
wire    regslice_both_stream_in_V_last_V_U_apdone_blk;
wire   [0:0] stream_in_TLAST_int_regslice;
wire    regslice_both_stream_in_V_last_V_U_vld_out;
wire    regslice_both_stream_in_V_last_V_U_ack_in;
wire   [95:0] stream_out_TDATA_int_regslice;
reg    stream_out_TVALID_int_regslice;
wire    stream_out_TREADY_int_regslice;
wire    regslice_both_stream_out_V_data_V_U_vld_out;
wire    regslice_both_stream_out_V_last_V_U_apdone_blk;
wire    regslice_both_stream_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg = 1'b0;
end

crosscorr_run_in_data_re_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
in_data_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(in_data_re_address0),
    .ce0(in_data_re_ce0),
    .we0(in_data_re_we0_local),
    .d0(in_data_re_d0_local),
    .q0(in_data_re_q0),
    .address1(in_data_re_address1_local),
    .ce1(in_data_re_ce1_local),
    .we1(in_data_re_we1_local),
    .d1(in_data_re_d1_local)
);

crosscorr_run_in_data_re_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
in_data_im_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(in_data_im_address0),
    .ce0(in_data_im_ce0),
    .we0(in_data_im_we0_local),
    .d0(in_data_im_d0_local),
    .q0(in_data_im_q0),
    .address1(in_data_im_address1_local),
    .ce1(in_data_im_ce1_local),
    .we1(in_data_im_we1_local),
    .d1(in_data_im_d1_local)
);

crosscorr_run_out_data_re_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
out_data_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_data_re_address0),
    .ce0(out_data_re_ce0),
    .we0(out_data_re_we0),
    .d0(out_data_re_d0),
    .q0(out_data_re_q0),
    .address1(out_data_re_address1_local),
    .ce1(out_data_re_ce1_local),
    .we1(out_data_re_we1_local),
    .d1(16'd0),
    .q1(out_data_re_q1)
);

crosscorr_run_out_data_re_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
out_data_im_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_data_im_address0),
    .ce0(out_data_im_ce0),
    .we0(out_data_im_we0),
    .d0(out_data_im_d0),
    .q0(out_data_im_q0),
    .address1(out_data_im_address1_local),
    .ce1(out_data_im_ce1_local),
    .we1(out_data_im_we1_local),
    .d1(16'd0),
    .q1(out_data_im_q1)
);

crosscorr_run_Pipeline_VITIS_LOOP_19_1 grp_run_Pipeline_VITIS_LOOP_19_1_fu_276(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start),
    .ap_done(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done),
    .ap_idle(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_idle),
    .ap_ready(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_ready),
    .out_data_re_address0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_address0),
    .out_data_re_ce0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_ce0),
    .out_data_re_we0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_we0),
    .out_data_re_d0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_d0),
    .out_data_im_address0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_address0),
    .out_data_im_ce0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_ce0),
    .out_data_im_we0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_we0),
    .out_data_im_d0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_d0),
    .in_data_re_address0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_address0),
    .in_data_re_ce0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_ce0),
    .in_data_re_q0(in_data_re_q0),
    .in_data_im_address0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_address0),
    .in_data_im_ce0(grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_ce0),
    .in_data_im_q0(in_data_im_q0),
    .tmp2_re_1_cast(tmp2_re_1_reg_484),
    .sext_ln19(tmp2_im_1_reg_489)
);

crosscorr_regslice_both #(
    .DataWidth( 128 ))
regslice_both_stream_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(stream_in_TDATA),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_data_V_U_ack_in),
    .data_out(stream_in_TDATA_int_regslice),
    .vld_out(stream_in_TVALID_int_regslice),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_data_V_U_apdone_blk)
);

crosscorr_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(stream_in_TLAST),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_last_V_U_ack_in),
    .data_out(stream_in_TLAST_int_regslice),
    .vld_out(regslice_both_stream_in_V_last_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_last_V_U_apdone_blk)
);

crosscorr_regslice_both #(
    .DataWidth( 96 ))
regslice_both_stream_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(stream_out_TDATA_int_regslice),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(stream_out_TREADY_int_regslice),
    .data_out(stream_out_TDATA),
    .vld_out(regslice_both_stream_out_V_data_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_data_V_U_apdone_blk)
);

crosscorr_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_last_reg_419),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_V_last_V_U_ack_in_dummy),
    .data_out(stream_out_TLAST),
    .vld_out(regslice_both_stream_out_V_last_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg <= 1'b1;
        end else if ((grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_ready == 1'b1)) begin
            grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        in_last_reg_419 <= stream_in_TLAST_int_regslice;
        trunc_ln13_2_reg_429 <= {{stream_in_TDATA_int_regslice[31:16]}};
        trunc_ln13_5_reg_434 <= {{stream_in_TDATA_int_regslice[79:64]}};
        trunc_ln13_6_reg_439 <= {{stream_in_TDATA_int_regslice[95:80]}};
        trunc_ln13_7_reg_444 <= {{stream_in_TDATA_int_regslice[111:96]}};
        trunc_ln13_8_reg_449 <= {{stream_in_TDATA_int_regslice[127:112]}};
        trunc_ln13_reg_424 <= trunc_ln13_fu_294_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_data_im_load_reg_499 <= out_data_im_q1;
        out_data_re_load_reg_494 <= out_data_re_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp2_im_1_reg_489[24 : 9] <= tmp2_im_1_fu_396_p3[24 : 9];
        tmp2_re_1_reg_484[24 : 9] <= tmp2_re_1_fu_388_p3[24 : 9];
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((stream_out_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state8)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in_data_im_address0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_address0;
    end else begin
        in_data_im_address0 = in_data_im_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_data_im_address0_local = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_data_im_address0_local = 64'd1;
    end else begin
        in_data_im_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_data_im_address1_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_data_im_address1_local = 64'd0;
    end else begin
        in_data_im_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in_data_im_ce0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_im_ce0;
    end else begin
        in_data_im_ce0 = in_data_im_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_data_im_ce0_local = 1'b1;
    end else begin
        in_data_im_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_data_im_ce1_local = 1'b1;
    end else begin
        in_data_im_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_data_im_d0_local = trunc_ln13_8_reg_449;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_data_im_d0_local = {{stream_in_TDATA_int_regslice[63:48]}};
    end else begin
        in_data_im_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_data_im_d1_local = trunc_ln13_6_reg_439;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_data_im_d1_local = {{stream_in_TDATA_int_regslice[31:16]}};
    end else begin
        in_data_im_d1_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_data_im_we0_local = 1'b1;
    end else begin
        in_data_im_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_data_im_we1_local = 1'b1;
    end else begin
        in_data_im_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in_data_re_address0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_address0;
    end else begin
        in_data_re_address0 = in_data_re_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_data_re_address0_local = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_data_re_address0_local = 64'd1;
    end else begin
        in_data_re_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_data_re_address1_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_data_re_address1_local = 64'd0;
    end else begin
        in_data_re_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in_data_re_ce0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_in_data_re_ce0;
    end else begin
        in_data_re_ce0 = in_data_re_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_data_re_ce0_local = 1'b1;
    end else begin
        in_data_re_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_data_re_ce1_local = 1'b1;
    end else begin
        in_data_re_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_data_re_d0_local = trunc_ln13_7_reg_444;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_data_re_d0_local = {{stream_in_TDATA_int_regslice[47:32]}};
    end else begin
        in_data_re_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_data_re_d1_local = trunc_ln13_5_reg_434;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        in_data_re_d1_local = trunc_ln13_fu_294_p1;
    end else begin
        in_data_re_d1_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_data_re_we0_local = 1'b1;
    end else begin
        in_data_re_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_data_re_we1_local = 1'b1;
    end else begin
        in_data_re_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_im_address0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_address0;
    end else begin
        out_data_im_address0 = out_data_im_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_data_im_address0_local = out_data_im_addr_2_reg_479;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_im_address0_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        out_data_im_address0_local = 64'd0;
    end else begin
        out_data_im_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_data_im_address1_local = out_data_im_addr_1_reg_469;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_data_im_address1_local = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_im_address1_local = 64'd1;
    end else begin
        out_data_im_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_im_ce0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_ce0;
    end else begin
        out_data_im_ce0 = out_data_im_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_data_im_ce0_local = 1'b1;
    end else begin
        out_data_im_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        out_data_im_ce1_local = 1'b1;
    end else begin
        out_data_im_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_im_d0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_d0;
    end else begin
        out_data_im_d0 = 16'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_im_we0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_im_we0;
    end else begin
        out_data_im_we0 = (out_data_im_we0_out | 1'b0);
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_data_im_we0_local = 1'b1;
    end else begin
        out_data_im_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_im_we1_local = 1'b1;
    end else begin
        out_data_im_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_re_address0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_address0;
    end else begin
        out_data_re_address0 = out_data_re_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_data_re_address0_local = out_data_re_addr_2_reg_474;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_re_address0_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        out_data_re_address0_local = 64'd0;
    end else begin
        out_data_re_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_data_re_address1_local = out_data_re_addr_1_reg_464;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_data_re_address1_local = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_re_address1_local = 64'd1;
    end else begin
        out_data_re_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_re_ce0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_ce0;
    end else begin
        out_data_re_ce0 = out_data_re_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_data_re_ce0_local = 1'b1;
    end else begin
        out_data_re_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        out_data_re_ce1_local = 1'b1;
    end else begin
        out_data_re_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_re_d0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_d0;
    end else begin
        out_data_re_d0 = 16'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_re_we0 = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_out_data_re_we0;
    end else begin
        out_data_re_we0 = (out_data_re_we0_out | 1'b0);
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_data_re_we0_local = 1'b1;
    end else begin
        out_data_re_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_re_we1_local = 1'b1;
    end else begin
        out_data_re_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        stream_in_TDATA_blk_n = stream_in_TVALID_int_regslice;
    end else begin
        stream_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        stream_in_TREADY_int_regslice = 1'b1;
    end else begin
        stream_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        stream_out_TDATA_blk_n = stream_out_TREADY_int_regslice;
    end else begin
        stream_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((stream_out_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        stream_out_TVALID_int_regslice = 1'b1;
    end else begin
        stream_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((stream_out_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((stream_in_TVALID_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((stream_out_TREADY_int_regslice == 1'b0) | (regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b1));
end

assign grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start = grp_run_Pipeline_VITIS_LOOP_19_1_fu_276_ap_start_reg;

assign out_data_im_addr_1_reg_469 = 64'd1;

assign out_data_im_addr_2_reg_479 = 64'd2;

assign out_data_im_we0_out = out_data_im_we0_local;

assign out_data_re_addr_1_reg_464 = 64'd1;

assign out_data_re_addr_2_reg_474 = 64'd2;

assign out_data_re_we0_out = out_data_re_we0_local;

assign stream_in_TREADY = regslice_both_stream_in_V_data_V_U_ack_in;

assign stream_out_TDATA_int_regslice = {{{{{{out_data_im_q0}, {out_data_re_q0}}, {out_data_im_q1}}, {out_data_re_q1}}, {out_data_im_load_reg_499}}, {out_data_re_load_reg_494}};

assign stream_out_TVALID = regslice_both_stream_out_V_data_V_U_vld_out;

assign tmp2_im_1_fu_396_p3 = {{trunc_ln13_2_reg_429}, {9'd0}};

assign tmp2_re_1_fu_388_p3 = {{trunc_ln13_reg_424}, {9'd0}};

assign trunc_ln13_fu_294_p1 = stream_in_TDATA_int_regslice[15:0];

always @ (posedge ap_clk) begin
    tmp2_re_1_reg_484[8:0] <= 9'b000000000;
    tmp2_im_1_reg_489[8:0] <= 9'b000000000;
end

endmodule //crosscorr_run
